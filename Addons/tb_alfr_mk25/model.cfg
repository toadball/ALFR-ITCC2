class CfgSkeletons
{
	class Default
	{
		isDiscrete=1;
		skeletonInherit="";
		skeletonBones[]={};
	};
	class tb_alfr_mk25_Skel: Default
	{
		skeletonBones[]=
		{
			"magazine","",
			"bolt", "",
			"fire_switch", "",
			"back_sight", "",
			"zeroing", "back_sight",
			"front_sight", "",
			"Trigger", "",
			"zasleh", ""		
		};
	};
};
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[]={};
		skeletonName="";
	};
	class tb_alfr_mk25_base: Default
	{
		sections[]=
		{
			"zasleh"
		};
		skeletonName="tb_alfr_mk25_Skel";
		class Animations
		{	
			class trigger_move
			
			{
				type="rotation";
				source="reload";
				selection="trigger";
				memory=1;
				sourceAddress="clamp";
				axis = "trigger_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-0.212389;
			};
			
			class bolt_move
			
			{
				type="translation";
				source="reload";
				selection="bolt";
				memory=1;
				sourceAddress="clamp";
				axis = "bolt_Axis";
				minValue=0.0;
				maxValue=1;
				minPhase=0.0;
				maxPhase=1;
				offset0=0;
				offset1=0.8;
			};
			
			class bolt_empty
			{
				type="translation";
				source="isEmptyNoReload";
				selection="bolt";
				axis="bolt_axis";
				sourceAddress = clamp;
				minValue = 0.0;
				maxValue = 1.0;
				offset0 = 0.0;
				offset1 = 0.8;
				animPeriod = 0.0;
				initPhase = 0.0;
				memory = true;
			};
			
			class magazine_reload_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				sourceAddress = clamp;
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 0.209091;
				unHideValue = 0.563636;
				animPeriod = 0.0;
				initPhase = 0.0;
			};
			
			class magazine_reload_move_1
			{
				type="translation";
				source="reloadMagazine";
				selection="magazine";
				axis="magazine_axis";
				sourceAddress = clamp;
				minValue = 0.163636;
				maxValue = 0.200000;
				offset0 = 0.0;
				offset1 = 1.2;
				animPeriod = 0.0;
				initPhase = 0.0;
				memory = true;
			};
			
			class magazine_reload_move_2
			{
				type="translation";
				source="reloadMagazine";
				selection="magazine";
				axis="magazine_axis";
				sourceAddress = clamp;
				minValue = 0.563636;
				maxValue = 0.590909;
				offset0 = 0.0;
				offset1 = -1.0;
				animPeriod = 0.0;
				initPhase = 0.0;
				memory = true;
			};
			
			class magazine_reload_move_3
			{
				type="translation";
				source="reloadMagazine";
				selection="magazine";
				axis="magazine_axis";
				sourceAddress = clamp;
				minValue = 0.590909;
				maxValue = 0.590909;
				offset0 = 0.0;
				offset1 = 0.0;
				animPeriod = 0.0;
				initPhase = 0.0;
				memory = true;
			};
			
			class magazine_reload_move_4
			{
				type="translation";
				source="reloadMagazine";
				selection="magazine";
				axis="magazine_axis";
				sourceAddress = clamp;
				minValue = 0.645455;
				maxValue = 0.663636;
				offset0 = 0.0;
				offset1 = -0.2;
				animPeriod = 0.0;
				initPhase = 0.0;
				memory = true;
			};
			
			class no_magazine
			{
				type="hide";
				source="hasMagazine";
				selection="magazine";
				sourceAddress = clamp;
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 0.5;
				unHideValue = -1.0;
				animPeriod = 0.0;
				initPhase = 0.0;
			};
			
			class backsight_rotate
			{
				type="rotation";
				source="hasOptics";
				selection="back_sight";
				axis="back_sight_axis";
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 1;
				angle0 = 0;
				angle1 = "rad 90";
			};
			
			class zeroing_rotate
			{
				type="rotation";
				source="zeroing1";
				selection="zeroing";
				axis="zeroing_axis";
				minValue = 0.0;
				maxValue = 1.0;
				angle0 = 0;
				angle1 = "rad 305";
			};
			
			class frontsight_rotate
			{
				type="rotation";
				source="hasOptics";
				selection="front_sight";
				axis="front_sight_axis";
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 1;
				angle0 = 0;
				angle1 = "rad 90";
			};
			
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
		
		};
	};
	
	class kio_SR25_EC: tb_alfr_mk25_base{};
	
	
};

